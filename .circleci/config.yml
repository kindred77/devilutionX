version: 2
jobs:
  linux_x86_64:
    docker:
      - image: debian:buster
    working_directory: ~/repo
    steps:
      - checkout
      - run: echo deb http://deb.debian.org/debian buster-backports main >> /etc/apt/sources.list.d/debian-backports.list
      - run: apt-get update -y
      - run: apt-get install -y -t 'buster-backports*' cmake
      - run: apt-get install -y g++ libsdl2-dev libbz2-dev git rpm wget smpq cmake libsodium-dev libpng-dev file
      - run: cmake -S. -Bbuild -DCMAKE_BUILD_TYPE=RelWithDebInfo -DBUILD_TESTING=OFF -DCPACK=ON -DCMAKE_INSTALL_PREFIX=/usr
      - run: cmake --build build -j 2 --target package
      - store_artifacts: {path: ./build/devilutionx, destination: devilutionx_linux_x86_64}
      - run: Packaging/nix/LinuxReleasePackaging.sh
      - run: Packaging/nix/AppImage.sh
      - store_artifacts: {path: ./devilutionx.appimage, destination: devilutionx_linux_x86_64.appimage}
      - store_artifacts: {path: ./devilutionx.tar.xz, destination: devilutionx_linux_x86_64.tar.xz}
  switch:
    docker:
      - image: devkitpro/devkita64:latest
    working_directory: ~/repo
    steps:
      - checkout
      - run: apt-get update -y
      - run: apt-get install -y gettext smpq
      - run: /opt/devkitpro/portlibs/switch/bin/aarch64-none-elf-cmake -S. -Bbuild -DCMAKE_BUILD_TYPE=RelWithDebInfo
      - run: cmake --build build -j 2
      - store_artifacts: {path: ./build/devilutionx.nro, destination: devilutionx.nro}
  3ds:
    docker:
      - image: devkitpro/devkitarm:latest
    working_directory: ~/repo
    steps:
      - checkout
      - run: apt-get update -y
      - run: apt-get install -y ffmpeg gettext smpq
      - run: wget https://github.com/diasurgical/bannertool/releases/download/1.2.0/bannertool.zip
      - run: unzip -j "bannertool.zip" "linux-x86_64/bannertool" -d "/opt/devkitpro/tools/bin"
      - run: wget https://github.com/3DSGuy/Project_CTR/releases/download/makerom-v0.18/makerom-v0.18-ubuntu_x86_64.zip
      - run: unzip "makerom-v0.18-ubuntu_x86_64.zip" "makerom" -d "/opt/devkitpro/tools/bin"
      - run: sudo chmod +rx /opt/devkitpro/tools/bin/makerom
      - run: cmake -S. -Bbuild -DCMAKE_BUILD_TYPE=RelWithDebInfo -DCMAKE_TOOLCHAIN_FILE=/opt/devkitpro/cmake/3DS.cmake
      - run: cmake --build build -j 2
      - store_artifacts: {path: ./build/devilutionx.3dsx, destination: devilutionx.3dsx}
      - store_artifacts: {path: ./build/devilutionx.cia, destination: devilutionx.cia}
  amigaos-m68k:
    docker:
      - image: amigadev/crosstools:m68k-amigaos
    working_directory: ~/repo
    steps:
      - checkout
      - run: Packaging/amiga/prep.sh
      - run: cmake -S. -Bbuild -DM68K_CPU=68040 -DM68K_FPU=hard -DM68K_COMMON="-s -fbbb=- -ffast-math -O2"
      - run: cd build && make -j2
      - store_artifacts: {path: ./build/devilutionx, destination: devilutionx_m68k}
  vita:
    docker:
      - image: vitasdk/vitasdk
    working_directory: ~/repo
    steps:
      - checkout
      - run: apk --no-cache add git cmake ninja bash pkgconfig gettext
      - run: cmake -S. -Bbuild -GNinja -DCMAKE_TOOLCHAIN_FILE=${VITASDK}/share/vita.toolchain.cmake -DCMAKE_BUILD_TYPE=RelWithDebInfo
      - run: cmake --build build -j 2
      - store_artifacts: {path: ./build/devilutionx.vpk, destination: devilutionx.vpk}

workflows:
  version: 2
  testflow:
    jobs:
      - linux_x86_64
      - switch
      - 3ds
      - amigaos-m68k
      - vita
